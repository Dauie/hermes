#ifndef HERMESFLATSCHEMA_VERIFIER_H
#define HERMESFLATSCHEMA_VERIFIER_H

/* Generated by flatcc 0.5.3-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef HERMESFLATSCHEMA_READER_H
#include "hermesFlatSchema_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int Hermes_Job_Ip4rng_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Hermes_Job_Prtrng_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Hermes_Job_Targetlist_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Hermes_Job_Portlist_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Hermes_Job_job_verify_table(flatcc_table_verifier_descriptor_t *td);

static inline int Hermes_Job_Ops_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Hermes_Job_Ops_identifier, 72, 8);
}

static inline int Hermes_Job_Ops_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Hermes_Job_Ops_type_hash, 72, 8);
}

static inline int Hermes_Job_Ops_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 72, 8);
}

static inline int Hermes_Job_Ops_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 72, 8);
}

static int Hermes_Job_Ip4rng_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* size */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* start */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* end */)) return ret;
    return flatcc_verify_ok;
}

static inline int Hermes_Job_Ip4rng_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Ip4rng_identifier, &Hermes_Job_Ip4rng_verify_table);
}

static inline int Hermes_Job_Ip4rng_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Ip4rng_type_identifier, &Hermes_Job_Ip4rng_verify_table);
}

static inline int Hermes_Job_Ip4rng_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Hermes_Job_Ip4rng_verify_table);
}

static inline int Hermes_Job_Ip4rng_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Hermes_Job_Ip4rng_verify_table);
}

static int Hermes_Job_Prtrng_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* size */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* start */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* end */)) return ret;
    return flatcc_verify_ok;
}

static inline int Hermes_Job_Prtrng_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Prtrng_identifier, &Hermes_Job_Prtrng_verify_table);
}

static inline int Hermes_Job_Prtrng_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Prtrng_type_identifier, &Hermes_Job_Prtrng_verify_table);
}

static inline int Hermes_Job_Prtrng_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Hermes_Job_Prtrng_verify_table);
}

static inline int Hermes_Job_Prtrng_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Hermes_Job_Prtrng_verify_table);
}

static int Hermes_Job_Targetlist_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* total */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* ip_cnt */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* rng_cnt */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 4, 4, INT64_C(1073741823)) /* ip */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 4, 0, &Hermes_Job_Ip4rng_verify_table) /* iprng */)) return ret;
    return flatcc_verify_ok;
}

static inline int Hermes_Job_Targetlist_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Targetlist_identifier, &Hermes_Job_Targetlist_verify_table);
}

static inline int Hermes_Job_Targetlist_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Targetlist_type_identifier, &Hermes_Job_Targetlist_verify_table);
}

static inline int Hermes_Job_Targetlist_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Hermes_Job_Targetlist_verify_table);
}

static inline int Hermes_Job_Targetlist_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Hermes_Job_Targetlist_verify_table);
}

static int Hermes_Job_Portlist_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* total */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* ip_cnt */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* rng_cnt */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 2, 2, INT64_C(2147483647)) /* port */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 4, 0, &Hermes_Job_Prtrng_verify_table) /* prtrng */)) return ret;
    return flatcc_verify_ok;
}

static inline int Hermes_Job_Portlist_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Portlist_identifier, &Hermes_Job_Portlist_verify_table);
}

static inline int Hermes_Job_Portlist_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_Portlist_type_identifier, &Hermes_Job_Portlist_verify_table);
}

static inline int Hermes_Job_Portlist_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Hermes_Job_Portlist_verify_table);
}

static inline int Hermes_Job_Portlist_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Hermes_Job_Portlist_verify_table);
}

static int Hermes_Job_job_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 72, 8) /* ops */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &Hermes_Job_Targetlist_verify_table) /* targets */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 2, 0, &Hermes_Job_Portlist_verify_table) /* ports */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 3, 0, &Hermes_Job_Portlist_verify_table) /* syn_ports */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 4, 0, &Hermes_Job_Portlist_verify_table) /* ack_ports */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 5, 0, &Hermes_Job_Portlist_verify_table) /* udp_ports */)) return ret;
    return flatcc_verify_ok;
}

static inline int Hermes_Job_job_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_job_identifier, &Hermes_Job_job_verify_table);
}

static inline int Hermes_Job_job_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Hermes_Job_job_type_identifier, &Hermes_Job_job_verify_table);
}

static inline int Hermes_Job_job_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Hermes_Job_job_verify_table);
}

static inline int Hermes_Job_job_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Hermes_Job_job_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* HERMESFLATSCHEMA_VERIFIER_H */
